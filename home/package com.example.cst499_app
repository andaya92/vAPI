package com.example.cst499_app;

import androidx.appcompat.app.AppCompatActivity;

import android.content.ContentValues;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.provider.BaseColumns;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import org.json.JSONException;
import org.json.JSONObject;

public class MainActivity extends AppCompatActivity implements Requests.RequestListener{

    private Requests requests = null;

    private UserContract.UserDBHelper dbHelper = new UserContract.UserDBHelper(this);
    private String[] projection = {BaseColumns._ID,
                                    UserContract.UserEntry.COL_NAME_USER_ID,
                                    UserContract.UserEntry.COL_NAME_USER_EMAIL,
                                    UserContract.UserEntry.COL_NAME_USER_USERNAME,
                                    UserContract.UserEntry.COL_NAME_USER_AUTH_TOKEN,
                                    UserContract.UserEntry.COL_NAME_ACCT_TYPE,
                                    };

    private void dropTable(){
        SQLiteDatabase db = dbHelper.getWritableDatabase();
        dbHelper.dropTable(db);
    }


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        //        dropTable(); // also re-creates it
    }

    private boolean authenticateUser(String email, String password){
        JSONObject data = new JSONObject();
        try {
            data.put("email", email);
            data.put("password", password);
        } catch (JSONException e) {
            e.printStackTrace();
            return false;
        }

        requests = new Requests(
                    APIContract.BASE_URL + APIContract.AUTH_USER,
                    data,
                    this,
                    this,
                    "POST");
        requests.start();
        return true;

    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main_menu, menu);

        Button register = findViewById(R.id.login_register);
        register.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent registerAct = new Intent(getApplicationContext(), RegisterActivity.class);
                startActivity(registerAct);

            }
        });


        Button login = findViewById(R.id.login_login);
        login.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                EditText email= findViewById(R.id.login_email);
                String email_text = String.valueOf(email.getText());

                EditText password= findViewById(R.id.login_password);
                String password_text = String.valueOf(password.getText());

                Log.i("ONLCIK", email_text + " " + password_text);

                authenticateUser(email_text, password_text);


            }
        });



        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_register) {
            startActivity(new Intent(this, RegisterActivity.class));
        }
        return super.onOptionsItemSelected(item);
    }

    private int userExists(){
        SQLiteDatabase db = dbHelper.getWritableDatabase();
        int userId = -1;
        Cursor cursor = db.query(
                UserContract.UserEntry.TABLE_NAME,   // The table to query
                projection,             // The array of columns to return (pass null to get all)
                null,              // The columns for the WHERE clause
                null,          // The values for the WHERE clause
                null,           // don't group the rows
                null,            // don't filter by row groups
                null            // The sort order
        );

        while(cursor.moveToNext()){
            userId = cursor.getInt(cursor.getColumnIndex(UserContract.UserEntry.COL_NAME_USER_ID));
            Log.i("MAINACT::userexists", String.valueOf(userId));
        }
        return userId;
    }

    private void saveInfo(int userId, String acctType, String email, String username, String authToken){
        SQLiteDatabase db = dbHelper.getWritableDatabase();

        ContentValues values = new ContentValues();
        values.put(UserContract.UserEntry.COL_NAME_USER_ID, userId);
        values.put(UserContract.UserEntry.COL_NAME_USER_USERNAME, username);
        values.put(UserContract.UserEntry.COL_NAME_USER_EMAIL, email);
        values.put(UserContract.UserEntry.COL_NAME_USER_AUTH_TOKEN, authToken);
        values.put(UserContract.UserEntry.COL_NAME_ACCT_TYPE, acctType);


        int id = userExists();

        if(id == -1){
            long rowsInserted = db.insert(UserContract.UserEntry.TABLE_NAME, null, values);
        }else{
//            db.update(UserContract.UserEntry.TABLE_NAME, values, UserContract.UserEntry.COL_NAME_USER_ID+"=?", new String[] {String.valueOf(id)});
            Log.i("MAINACT::saveInfo", "User already has saved info");
            Log.i("MAINACT::saveInfo", String.valueOf(id));
        }

    }

    @Override
    public void onRepsonseReqURL(JSONObject data, String error) {
        if(data != null){
            Log.i("Main::response", data.toString());
            // Save rest_token in DB
            JSONObject user = data.optJSONObject("user");
            if(user != null){
                saveInfo(user.optInt("id"), user.optString("acct_type"), user.optString("email"), user.optString("username"), data.optString("rest_token"));
            }
            if(data.has("user") && data.has("rest_token")){
                startActivity(new Intent(getApplicationContext(), HomeActivity.class));
            }else{
                Toast.makeText(getApplicationContext(), "Login Failed", Toast.LENGTH_SHORT).show();
            }
        }
    }

    @Override
    public void onImgRepsonseReqURL(String data, Bitmap imgSrc) {

    }
}
